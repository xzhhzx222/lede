# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  repository_dispatch:
  workflow_dispatch:

jobs:

  build_openwrt:

    name: Build Lean Lede

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Update feeds
        run: |
          # 添加passwall
          echo 'src-git passwall https://github.com/xiaorouji/openwrt-passwall' >>feeds.conf.default
          # 添加ssrplus
          echo 'src-git helloworld https://github.com/fw876/helloworld' >>feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          # 修改默认ip
          sed -i 's/192.168.1.1/10.0.0.2/g' package/base-files/files/bin/config_generate
          # 修改默认主机名称
          sed -i 's/OpenWrt/SamWrt/g' package/base-files/files/bin/config_generate
          # 禁用dns缓存
          sed -i '/dnsmasq/a\option cachesize 0' package/network/services/dnsmasq/files/dhcp.conf
          sed -i 's/\(option cachesize\)/\t\1/' package/network/services/dnsmasq/files/dhcp.conf
          # 禁用ipv6解析
          sed -i '/dnsmasq/a\option filter_aaaa 1' package/network/services/dnsmasq/files/dhcp.conf
          sed -i 's/\(option filter_aaaa\)/\t\1/' package/network/services/dnsmasq/files/dhcp.conf
          # 顺序分配ip
          sed -i '/dnsmasq/a\option sequential_ip 1' package/network/services/dnsmasq/files/dhcp.conf
          sed -i 's/\(option sequential_ip\)/\t\1/' package/network/services/dnsmasq/files/dhcp.conf
          # 调整ip范围
          sed -i '/start/s/100/20/g' package/network/services/dnsmasq/files/dhcp.conf
          sed -i '/limit/s/150/80/g' package/network/services/dnsmasq/files/dhcp.conf
          # 支持iptv
          echo 'dhcp-option-force=125,00:00:00:00:1a:02:06:48:47:57:2d:43:54:03:04:5a:58:48:4e:0a:02:20:00:0b:02:00:55:0d:02:00:2e' >>package/network/services/dnsmasq/files/dnsmasq.conf
          echo 'dhcp-option=15' >>package/network/services/dnsmasq/files/dnsmasq.conf
          echo 'dhcp-option=28' >>package/network/services/dnsmasq/files/dnsmasq.conf
          echo 'dhcp-option=60,00:00:01:06:68:75:61:71:69:6E:02:0A:48:47:55:34:32:31:4E:20:76:33:03:0A:48:47:55:34:32:31:4E:20:76:33:04:10:32:30:30:2E:55:59:59:2E:30:2E:41:2E:30:2E:53:48:05:04:00:01:00:50' >>package/network/services/dnsmasq/files/dnsmasq.conf
          # 添加用户
          echo 'li:x:1000:100:li:/mnt/homes/li:/bin/false' >>package/base-files/files/etc/passwd
          echo 'sophie:x:1001:100:sophie:/mnt/homes/sophie:/bin/false' >>package/base-files/files/etc/passwd
          echo 'xzhhzx222:x:1002:100:xzhhzx222:/mnt/homes:/bin/false' >>package/base-files/files/etc/passwd
          echo 'guest:x:1003:100:guest:/mnt/homes/guest:/bin/false' >>package/base-files/files/etc/passwd
          # 修改默认root密码
          sed -i 's#root::0#root:$1$yW9piKyc$OT6rrlpcoPRvf1Vk.Zm9N/:18415#g' package/base-files/files/etc/shadow
          # 设置用户密码
          echo 'li:$1$Ow7vwy1O$lCGrGnn4g3YKBCFQ60/yJ.:18664:0:99999:7:::' >>package/base-files/files/etc/shadow
          echo 'sophie:$1$QSEsYP5O$HphTBwlP28deKNymcaKFf0:18664:0:99999:7:::' >>package/base-files/files/etc/shadow
          echo 'xzhhzx222:$1$3L7KoROG$MUcqm4H6jza4/83CBOsSH/:18664:0:99999:7:::' >>package/base-files/files/etc/shadow
          echo 'guest:$1$H7u9QR91$OT6NJ/3psLSpT41fw.zqX1:18815:0:99999:7:::' >>package/base-files/files/etc/shadow
          # turboacc优化
          sed -i '/bbr/s/0/1/g' package/lean/luci-app-turboacc/root/etc/config/turboacc
          # 允许外网访问
          sed -i '/rfc1918_filter/s/1/0/g' package/network/services/uhttpd/files/uhttpd.config
          # 开启upnp
          sed -i '/enabled/s/0/1/g' package/feeds/packages/miniupnpd/files/upnpd.config

          # 添加adguardhome
          #git clone https://github.com/rufengsuixing/luci-app-adguardhome.git package/luci-app-adguardhome
          #svn co https://github.com/Lienol/openwrt/trunk/package/diy/luci-app-adguardhome package/luci-app-adguardhome
          # 添加advanced
          git clone https://github.com/sirpdboy/luci-app-advanced.git package/luci-app-advanced
          # 添加argon-config
          git clone https://github.com/jerrykuku/luci-app-argon-config.git package/luci-app-argon-config
          # 添加bypass
          #git clone https://github.com/kiddin9/openwrt-bypass.git package/luci-app-bypass
          # 添加dockerman
          svn co https://github.com/lisaac/luci-app-dockerman/trunk/applications/luci-app-dockerman package/luci-app-dockerman
          # 添加helloworld
          #git clone https://github.com/jerrykuku/lua-maxminddb.git package/vssr/lua-maxminddb
          #git clone https://github.com/jerrykuku/luci-app-vssr.git package/vssr/luci-app-vssr
          # 添加oaf
          #git clone https://github.com/destan19/OpenAppFilter.git package/OpenAppFilter
          # 添加openclash
          #git clone https://github.com/vernesong/OpenClash.git package/OpenClash
          # 添加timecontrol
          svn co https://github.com/Lienol/openwrt-package/trunk/luci-app-timecontrol package/luci-app-timecontrol
          # 添加weburl
          svn co https://github.com/Lienol/openwrt-package/trunk/luci-app-control-weburl package/luci-app-control-weburl

          # 更改默认主题
          rm -rf package/lean/luci-theme-argon
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon
          sed -i 's/luci-theme-bootstrap/luci-theme-argon/g' package/feeds/luci/luci/Makefile

          # 移动oaf到管控下
          #sed -i 's/"network"/"control"/g' package/OpenAppFilter/luci-app-oaf/luasrc/controller/appfilter.lua
          #sed -i 's/network/control/g' package/OpenAppFilter/luci-app-oaf/luasrc/view/admin_network/user_status.htm
          # 移动upnp到网络下
          sed -i 's/"services"/"network"/g' package/feeds/luci/luci-app-upnp/luasrc/controller/upnp.lua
          sed -i 's/services/network/g' package/feeds/luci/luci-app-upnp/luasrc/view/upnp_status.htm
          # 移动wol到管控下
          #sed -i 's/"services"/"control"/g' package/feeds/luci/luci-app-wol/luasrc/controller/wol.lua

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:
          cat >> .config <<EOF
          # 编译x64及内核
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y

          # 固件大小
          CONFIG_TARGET_KERNEL_PARTSIZE=128
          CONFIG_TARGET_ROOTFS_PARTSIZE=512
          CONFIG_TARGET_IMAGES_GZIP=y

          # 编译GRUB固件
          CONFIG_GRUB_IMAGES=y

          # 取消编译EFI固件
          # CONFIG_GRUB_EFI_IMAGES is not set

          # 取消编译VMDK固件
          # CONFIG_VMDK_IMAGES is not set

          # GRUB标题
          CONFIG_GRUB_TITLE="SAMWRT"

          # 软件包支持
          # CONFIG_PACKAGE_autosamba is not set
          CONFIG_PACKAGE_open-vm-tools=y
          CONFIG_PACKAGE_open-vm-tools-fuse=y
          CONFIG_PACKAGE_samba4-server=y
          CONFIG_PACKAGE_vsftpd=y

          # Default Packages
          # CONFIG_PACKAGE_luci-app-accesscontrol is not set
          # CONFIG_PACKAGE_luci-app-adbyby-plus is not set
          # CONFIG_PACKAGE_luci-app-arpbind is not set
          # CONFIG_PACKAGE_luci-app-autoreboot is not set
          CONFIG_PACKAGE_luci-app-diskman=y
          # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
          CONFIG_PACKAGE_luci-app-jd-dailybonus=y
          # CONFIG_PACKAGE_luci-app-nlbwmon is not set
          # CONFIG_PACKAGE_luci-app-qbittorrent is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_fuse-utils is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-ng is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-webui is not set
          # CONFIG_PACKAGE_luci-app-samba is not set
          CONFIG_PACKAGE_luci-app-softethervpn=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          # CONFIG_PACKAGE_luci-app-unblockmusic is not set
          # CONFIG_PACKAGE_luci-app-unblockmusic_INCLUDE_UnblockNeteaseMusic_Go is not set
          # CONFIG_PACKAGE_luci-app-uugamebooster is not set
          # CONFIG_PACKAGE_luci-app-vlmcsd is not set
          # CONFIG_PACKAGE_luci-app-vsftpd is not set
          # CONFIG_PACKAGE_luci-app-wol is not set
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          # CONFIG_PACKAGE_luci-app-zerotier is not set

          # Other Packages
          CONFIG_PACKAGE_luci-app-adguardhome=y
          CONFIG_PACKAGE_luci-app-advanced=y
          CONFIG_PACKAGE_luci-app-argon-config=y
          CONFIG_PACKAGE_luci-app-bypass=y
          CONFIG_PACKAGE_luci-app-control-weburl=y
          CONFIG_PACKAGE_luci-app-dockerman=y
          CONFIG_PACKAGE_luci-app-oaf=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-timecontrol=y
          CONFIG_PACKAGE_luci-app-vssr=y
          EOF
          #
          # ===============================================================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          #mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          #cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

#       - name: Deliver package
#         uses: actions/upload-artifact@v2
#         with:
#           name: OpenWrt_package
#           path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  

#       - name: Upload release asset
#         if: github.event == 'release'
#         uses: svenstaro/upload-release-action@v2
#         with:
#           repo_token: ${{ secrets.YOURTOKEN }}
#           file: ./artifact/firmware/*
#           tag: ${{ github.ref }}
#           file_glob: true
